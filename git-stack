#!/usr/bin/env bash
#!/usr/bin/env zsh
#
# Show the difference between the selected branch and master branch

function main() {
	# Check if it's a git repo
	[[ $(git root 2>&1) == 'Not a git repo!' ]] && echo "Not a git repo!" && exit 1

	local branch
	# Select a branch if no 'develop' branch
	if [[ -z $(git branch --list | grep 'develop') ]]; then
		branch=$(git branch --list |
			grep --invert-match 'master' | # Remove master from options
			fzf --reverse --height=40% --cycle |
			tr "*" " " |
			xargs) # Remove trailing whitespaces
	else
		branch='develop'
	fi

	# Check if $branch has value
	[[ -z "$branch" ]] && echo "No branch selected" && exit 1

	function fuzzy-commit() {
		glNoGraph() {
			git log master.."$branch" --color=always --format="%C(auto)%h%d %s %C(black)%C(bold)%cr% C(auto)%an" "$@"
		}
		_gitLogLineToHash="echo {} | grep -o '[a-f0-9]\{7\}' | head -1"
		_viewGitLogLine="$_gitLogLineToHash | xargs -I % sh -c 'git show --color=always % | diff-so-fancy'"

		glNoGraph |
			fzf --cycle --no-sort --reverse --tiebreak=index --no-multi \
				--ansi --preview="$_viewGitLogLine" \
				--header "enter to view, alt-y to copy hash" \
				--bind "enter:execute:$_viewGitLogLine   | less -R" \
				--bind "alt-y:execute:$_gitLogLineToHash | xclip"
	}

	fuzzy-commit
}


################ Help ################
usage="usage: $(basename "$0") [<options>]

Compare against master branch with fzf

where:
	-h  show this help text"

############# Parse options ##############
while getopts ':h' option; do
	case "$option" in
	h)
		echo "$usage"
		exit 0
		;;
	:)
		main
		exit
		;;
	\?)
		printf "illegal option: -%s\n" "$OPTARG" >&2
		echo -e "$usage" >&2
		exit 1
		;;
	esac
done
shift $((OPTIND - 1))

# Default case when no option provided
main
